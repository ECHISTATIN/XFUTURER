{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/quickselect/index.js"],"sourcesContent":["\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n"],"names":[],"mappings":"AACA;;;;;;;;;;CAUC;;;AACc,SAAS,YAAY,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,IAAI,MAAM,GAAG,CAAC,EAAE,UAAU,cAAc;IAElG,MAAO,QAAQ,KAAM;QACjB,IAAI,QAAQ,OAAO,KAAK;YACpB,MAAM,IAAI,QAAQ,OAAO;YACzB,MAAM,IAAI,IAAI,OAAO;YACrB,MAAM,IAAI,KAAK,GAAG,CAAC;YACnB,MAAM,IAAI,MAAM,KAAK,GAAG,CAAC,IAAI,IAAI;YACjC,MAAM,KAAK,MAAM,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;YACzE,MAAM,UAAU,KAAK,GAAG,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI;YAC1D,MAAM,WAAW,KAAK,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI;YAClE,YAAY,KAAK,GAAG,SAAS,UAAU;QAC3C;QAEA,MAAM,IAAI,GAAG,CAAC,EAAE;QAChB,IAAI,IAAI;QACR,mBAAmB,GACnB,IAAI,IAAI;QAER,KAAK,KAAK,MAAM;QAChB,IAAI,QAAQ,GAAG,CAAC,MAAM,EAAE,KAAK,GAAG,KAAK,KAAK,MAAM;QAEhD,MAAO,IAAI,EAAG;YACV,KAAK,KAAK,GAAG;YACb;YACA;YACA,MAAO,QAAQ,GAAG,CAAC,EAAE,EAAE,KAAK,EAAG;YAC/B,MAAO,QAAQ,GAAG,CAAC,EAAE,EAAE,KAAK,EAAG;QACnC;QAEA,IAAI,QAAQ,GAAG,CAAC,KAAK,EAAE,OAAO,GAAG,KAAK,KAAK,MAAM;aAC5C;YACD;YACA,KAAK,KAAK,GAAG;QACjB;QAEA,IAAI,KAAK,GAAG,OAAO,IAAI;QACvB,IAAI,KAAK,GAAG,QAAQ,IAAI;IAC5B;AACJ;AAEA;;;;;CAKC,GACD,SAAS,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC;IACnB,MAAM,MAAM,GAAG,CAAC,EAAE;IAClB,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;IACf,GAAG,CAAC,EAAE,GAAG;AACb;AAEA;;;;;CAKC,GACD,SAAS,eAAe,CAAC,EAAE,CAAC;IACxB,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI;AACpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/rbush/index.js"],"sourcesContent":["import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe,MAAM;IACjB,YAAY,aAAa,CAAC,CAAE;QACxB,mFAAmF;QACnF,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG;QAC5D,IAAI,CAAC,KAAK;IACd;IAEA,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;IAClC;IAEA,OAAO,IAAI,EAAE;QACT,IAAI,OAAO,IAAI,CAAC,IAAI;QACpB,MAAM,SAAS,EAAE;QAEjB,IAAI,CAAC,WAAW,MAAM,OAAO,OAAO;QAEpC,MAAM,SAAS,IAAI,CAAC,MAAM;QAC1B,MAAM,gBAAgB,EAAE;QAExB,MAAO,KAAM;YACT,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ,CAAC,MAAM,EAAE,IAAK;gBAC3C,MAAM,QAAQ,KAAK,QAAQ,CAAC,EAAE;gBAC9B,MAAM,YAAY,KAAK,IAAI,GAAG,OAAO,SAAS;gBAE9C,IAAI,WAAW,MAAM,YAAY;oBAC7B,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC;yBACtB,IAAI,SAAS,MAAM,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO;yBAChD,cAAc,IAAI,CAAC;gBAC5B;YACJ;YACA,OAAO,cAAc,GAAG;QAC5B;QAEA,OAAO;IACX;IAEA,SAAS,IAAI,EAAE;QACX,IAAI,OAAO,IAAI,CAAC,IAAI;QAEpB,IAAI,CAAC,WAAW,MAAM,OAAO,OAAO;QAEpC,MAAM,gBAAgB,EAAE;QACxB,MAAO,KAAM;YACT,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ,CAAC,MAAM,EAAE,IAAK;gBAC3C,MAAM,QAAQ,KAAK,QAAQ,CAAC,EAAE;gBAC9B,MAAM,YAAY,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS;gBAEnD,IAAI,WAAW,MAAM,YAAY;oBAC7B,IAAI,KAAK,IAAI,IAAI,SAAS,MAAM,YAAY,OAAO;oBACnD,cAAc,IAAI,CAAC;gBACvB;YACJ;YACA,OAAO,cAAc,GAAG;QAC5B;QAEA,OAAO;IACX;IAEA,KAAK,IAAI,EAAE;QACP,IAAI,CAAC,CAAC,QAAQ,KAAK,MAAM,GAAG,OAAO,IAAI;QAEvC,IAAI,KAAK,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;YAChC,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;gBAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACvB;YACA,OAAO,IAAI;QACf;QAEA,kFAAkF;QAClF,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,GAAG,GAAG;QAEzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC5B,8BAA8B;YAC9B,IAAI,CAAC,IAAI,GAAG;QAEhB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,MAAM,EAAE;YACzC,2CAA2C;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE;QAE/B,OAAO;YACH,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM,EAAE;gBAChC,uCAAuC;gBACvC,MAAM,UAAU,IAAI,CAAC,IAAI;gBACzB,IAAI,CAAC,IAAI,GAAG;gBACZ,OAAO;YACX;YAEA,iEAAiE;YACjE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM,GAAG,GAAG;QAC3D;QAEA,OAAO,IAAI;IACf;IAEA,OAAO,IAAI,EAAE;QACT,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG;QAChD,OAAO,IAAI;IACf;IAEA,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG,WAAW,EAAE;QACzB,OAAO,IAAI;IACf;IAEA,OAAO,IAAI,EAAE,QAAQ,EAAE;QACnB,IAAI,CAAC,MAAM,OAAO,IAAI;QAEtB,IAAI,OAAO,IAAI,CAAC,IAAI;QACpB,MAAM,OAAO,IAAI,CAAC,MAAM,CAAC;QACzB,MAAM,OAAO,EAAE;QACf,MAAM,UAAU,EAAE;QAClB,IAAI,GAAG,QAAQ;QAEf,uCAAuC;QACvC,MAAO,QAAQ,KAAK,MAAM,CAAE;YAExB,IAAI,CAAC,MAAM;gBACP,OAAO,KAAK,GAAG;gBACf,SAAS,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;gBAC9B,IAAI,QAAQ,GAAG;gBACf,UAAU;YACd;YAEA,IAAI,KAAK,IAAI,EAAE;gBACX,MAAM,QAAQ,SAAS,MAAM,KAAK,QAAQ,EAAE;gBAE5C,IAAI,UAAU,CAAC,GAAG;oBACd,wDAAwD;oBACxD,KAAK,QAAQ,CAAC,MAAM,CAAC,OAAO;oBAC5B,KAAK,IAAI,CAAC;oBACV,IAAI,CAAC,SAAS,CAAC;oBACf,OAAO,IAAI;gBACf;YACJ;YAEA,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,SAAS,MAAM,OAAO;gBAChD,KAAK,IAAI,CAAC;gBACV,QAAQ,IAAI,CAAC;gBACb,IAAI;gBACJ,SAAS;gBACT,OAAO,KAAK,QAAQ,CAAC,EAAE;YAE3B,OAAO,IAAI,QAAQ;gBACf;gBACA,OAAO,OAAO,QAAQ,CAAC,EAAE;gBACzB,UAAU;YAEd,OAAO,OAAO,MAAM,gBAAgB;QACxC;QAEA,OAAO,IAAI;IACf;IAEA,OAAO,IAAI,EAAE;QAAE,OAAO;IAAM;IAE5B,YAAY,CAAC,EAAE,CAAC,EAAE;QAAE,OAAO,EAAE,IAAI,GAAG,EAAE,IAAI;IAAE;IAC5C,YAAY,CAAC,EAAE,CAAC,EAAE;QAAE,OAAO,EAAE,IAAI,GAAG,EAAE,IAAI;IAAE;IAE5C,SAAS;QAAE,OAAO,IAAI,CAAC,IAAI;IAAE;IAE7B,SAAS,IAAI,EAAE;QACX,IAAI,CAAC,IAAI,GAAG;QACZ,OAAO,IAAI;IACf;IAEA,KAAK,IAAI,EAAE,MAAM,EAAE;QACf,MAAM,gBAAgB,EAAE;QACxB,MAAO,KAAM;YACT,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI,IAAI,KAAK,QAAQ;iBACtC,cAAc,IAAI,IAAI,KAAK,QAAQ;YAExC,OAAO,cAAc,GAAG;QAC5B;QACA,OAAO;IACX;IAEA,OAAO,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;QAE/B,MAAM,IAAI,QAAQ,OAAO;QACzB,IAAI,IAAI,IAAI,CAAC,WAAW;QACxB,IAAI;QAEJ,IAAI,KAAK,GAAG;YACR,kCAAkC;YAClC,OAAO,WAAW,MAAM,KAAK,CAAC,MAAM,QAAQ;YAC5C,SAAS,MAAM,IAAI,CAAC,MAAM;YAC1B,OAAO;QACX;QAEA,IAAI,CAAC,QAAQ;YACT,wCAAwC;YACxC,SAAS,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC;YAE1C,gEAAgE;YAChE,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,SAAS;QAC3C;QAEA,OAAO,WAAW,EAAE;QACpB,KAAK,IAAI,GAAG;QACZ,KAAK,MAAM,GAAG;QAEd,6CAA6C;QAE7C,MAAM,KAAK,KAAK,IAAI,CAAC,IAAI;QACzB,MAAM,KAAK,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC;QAEpC,YAAY,OAAO,MAAM,OAAO,IAAI,IAAI,CAAC,WAAW;QAEpD,IAAK,IAAI,IAAI,MAAM,KAAK,OAAO,KAAK,GAAI;YAEpC,MAAM,SAAS,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG;YAEpC,YAAY,OAAO,GAAG,QAAQ,IAAI,IAAI,CAAC,WAAW;YAElD,IAAK,IAAI,IAAI,GAAG,KAAK,QAAQ,KAAK,GAAI;gBAElC,MAAM,SAAS,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG;gBAEpC,8BAA8B;gBAC9B,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,SAAS;YAC9D;QACJ;QAEA,SAAS,MAAM,IAAI,CAAC,MAAM;QAE1B,OAAO;IACX;IAEA,eAAe,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;QACpC,MAAO,KAAM;YACT,KAAK,IAAI,CAAC;YAEV,IAAI,KAAK,IAAI,IAAI,KAAK,MAAM,GAAG,MAAM,OAAO;YAE5C,IAAI,UAAU;YACd,IAAI,iBAAiB;YACrB,IAAI;YAEJ,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ,CAAC,MAAM,EAAE,IAAK;gBAC3C,MAAM,QAAQ,KAAK,QAAQ,CAAC,EAAE;gBAC9B,MAAM,OAAO,SAAS;gBACtB,MAAM,cAAc,aAAa,MAAM,SAAS;gBAEhD,+CAA+C;gBAC/C,IAAI,cAAc,gBAAgB;oBAC9B,iBAAiB;oBACjB,UAAU,OAAO,UAAU,OAAO;oBAClC,aAAa;gBAEjB,OAAO,IAAI,gBAAgB,gBAAgB;oBACvC,8CAA8C;oBAC9C,IAAI,OAAO,SAAS;wBAChB,UAAU;wBACV,aAAa;oBACjB;gBACJ;YACJ;YAEA,OAAO,cAAc,KAAK,QAAQ,CAAC,EAAE;QACzC;QAEA,OAAO;IACX;IAEA,QAAQ,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;QACzB,MAAM,OAAO,SAAS,OAAO,IAAI,CAAC,MAAM,CAAC;QACzC,MAAM,aAAa,EAAE;QAErB,qFAAqF;QACrF,MAAM,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,OAAO;QAEzD,6BAA6B;QAC7B,KAAK,QAAQ,CAAC,IAAI,CAAC;QACnB,OAAO,MAAM;QAEb,yDAAyD;QACzD,MAAO,SAAS,EAAG;YACf,IAAI,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;gBACtD,IAAI,CAAC,MAAM,CAAC,YAAY;gBACxB;YACJ,OAAO;QACX;QAEA,yCAAyC;QACzC,IAAI,CAAC,mBAAmB,CAAC,MAAM,YAAY;IAC/C;IAEA,iCAAiC;IACjC,OAAO,UAAU,EAAE,KAAK,EAAE;QACtB,MAAM,OAAO,UAAU,CAAC,MAAM;QAC9B,MAAM,IAAI,KAAK,QAAQ,CAAC,MAAM;QAC9B,MAAM,IAAI,IAAI,CAAC,WAAW;QAE1B,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG;QAE/B,MAAM,aAAa,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG;QAEnD,MAAM,UAAU,WAAW,KAAK,QAAQ,CAAC,MAAM,CAAC,YAAY,KAAK,QAAQ,CAAC,MAAM,GAAG;QACnF,QAAQ,MAAM,GAAG,KAAK,MAAM;QAC5B,QAAQ,IAAI,GAAG,KAAK,IAAI;QAExB,SAAS,MAAM,IAAI,CAAC,MAAM;QAC1B,SAAS,SAAS,IAAI,CAAC,MAAM;QAE7B,IAAI,OAAO,UAAU,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC1C,IAAI,CAAC,UAAU,CAAC,MAAM;IAC/B;IAEA,WAAW,IAAI,EAAE,OAAO,EAAE;QACtB,kBAAkB;QAClB,IAAI,CAAC,IAAI,GAAG,WAAW;YAAC;YAAM;SAAQ;QACtC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM,GAAG;QACjC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG;QACjB,SAAS,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM;IACnC;IAEA,kBAAkB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;QAC1B,IAAI;QACJ,IAAI,aAAa;QACjB,IAAI,UAAU;QAEd,IAAK,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,IAAK;YAC7B,MAAM,QAAQ,SAAS,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;YAC9C,MAAM,QAAQ,SAAS,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;YAE9C,MAAM,UAAU,iBAAiB,OAAO;YACxC,MAAM,OAAO,SAAS,SAAS,SAAS;YAExC,2CAA2C;YAC3C,IAAI,UAAU,YAAY;gBACtB,aAAa;gBACb,QAAQ;gBAER,UAAU,OAAO,UAAU,OAAO;YAEtC,OAAO,IAAI,YAAY,YAAY;gBAC/B,kDAAkD;gBAClD,IAAI,OAAO,SAAS;oBAChB,UAAU;oBACV,QAAQ;gBACZ;YACJ;QACJ;QAEA,OAAO,SAAS,IAAI;IACxB;IAEA,iDAAiD;IACjD,iBAAiB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;QACzB,MAAM,cAAc,KAAK,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG;QACnD,MAAM,cAAc,KAAK,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG;QACnD,MAAM,UAAU,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,GAAG;QAChD,MAAM,UAAU,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,GAAG;QAEhD,sEAAsE;QACtE,wCAAwC;QACxC,IAAI,UAAU,SAAS,KAAK,QAAQ,CAAC,IAAI,CAAC;IAC9C;IAEA,sFAAsF;IACtF,eAAe,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE;QAChC,KAAK,QAAQ,CAAC,IAAI,CAAC;QAEnB,MAAM,SAAS,IAAI,CAAC,MAAM;QAC1B,MAAM,WAAW,SAAS,MAAM,GAAG,GAAG;QACtC,MAAM,YAAY,SAAS,MAAM,IAAI,GAAG,GAAG;QAC3C,IAAI,SAAS,WAAW,YAAY,WAAW;QAE/C,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAK;YAC5B,MAAM,QAAQ,KAAK,QAAQ,CAAC,EAAE;YAC9B,OAAO,UAAU,KAAK,IAAI,GAAG,OAAO,SAAS;YAC7C,UAAU,WAAW;QACzB;QAEA,IAAK,IAAI,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAK;YACjC,MAAM,QAAQ,KAAK,QAAQ,CAAC,EAAE;YAC9B,OAAO,WAAW,KAAK,IAAI,GAAG,OAAO,SAAS;YAC9C,UAAU,WAAW;QACzB;QAEA,OAAO;IACX;IAEA,oBAAoB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;QACnC,0CAA0C;QAC1C,IAAK,IAAI,IAAI,OAAO,KAAK,GAAG,IAAK;YAC7B,OAAO,IAAI,CAAC,EAAE,EAAE;QACpB;IACJ;IAEA,UAAU,IAAI,EAAE;QACZ,gEAAgE;QAChE,IAAK,IAAI,IAAI,KAAK,MAAM,GAAG,GAAG,UAAU,KAAK,GAAG,IAAK;YACjD,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG;gBAC/B,IAAI,IAAI,GAAG;oBACP,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ;oBAC/B,SAAS,MAAM,CAAC,SAAS,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG;gBAE/C,OAAO,IAAI,CAAC,KAAK;YAErB,OAAO,SAAS,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM;QACxC;IACJ;AACJ;AAEA,SAAS,SAAS,IAAI,EAAE,KAAK,EAAE,QAAQ;IACnC,IAAI,CAAC,UAAU,OAAO,MAAM,OAAO,CAAC;IAEpC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACnC,IAAI,SAAS,MAAM,KAAK,CAAC,EAAE,GAAG,OAAO;IACzC;IACA,OAAO,CAAC;AACZ;AAEA,oDAAoD;AACpD,SAAS,SAAS,IAAI,EAAE,MAAM;IAC1B,SAAS,MAAM,GAAG,KAAK,QAAQ,CAAC,MAAM,EAAE,QAAQ;AACpD;AAEA,wDAAwD;AACxD,SAAS,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ;IAC1C,IAAI,CAAC,UAAU,WAAW,WAAW;IACrC,SAAS,IAAI,GAAG;IAChB,SAAS,IAAI,GAAG;IAChB,SAAS,IAAI,GAAG,CAAC;IACjB,SAAS,IAAI,GAAG,CAAC;IAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QACxB,MAAM,QAAQ,KAAK,QAAQ,CAAC,EAAE;QAC9B,OAAO,UAAU,KAAK,IAAI,GAAG,OAAO,SAAS;IACjD;IAEA,OAAO;AACX;AAEA,SAAS,OAAO,CAAC,EAAE,CAAC;IAChB,EAAE,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IAChC,EAAE,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IAChC,EAAE,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IAChC,EAAE,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IAChC,OAAO;AACX;AAEA,SAAS,gBAAgB,CAAC,EAAE,CAAC;IAAI,OAAO,EAAE,IAAI,GAAG,EAAE,IAAI;AAAE;AACzD,SAAS,gBAAgB,CAAC,EAAE,CAAC;IAAI,OAAO,EAAE,IAAI,GAAG,EAAE,IAAI;AAAE;AAEzD,SAAS,SAAS,CAAC;IAAM,OAAO,CAAC,EAAE,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,IAAI;AAAG;AACvE,SAAS,WAAW,CAAC;IAAI,OAAO,AAAC,EAAE,IAAI,GAAG,EAAE,IAAI,GAAI,CAAC,EAAE,IAAI,GAAG,EAAE,IAAI;AAAG;AAEvE,SAAS,aAAa,CAAC,EAAE,CAAC;IACtB,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,IACpD,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC;AAC/D;AAEA,SAAS,iBAAiB,CAAC,EAAE,CAAC;IAC1B,MAAM,OAAO,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IACpC,MAAM,OAAO,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IACpC,MAAM,OAAO,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IACpC,MAAM,OAAO,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI;IAEpC,OAAO,KAAK,GAAG,CAAC,GAAG,OAAO,QACnB,KAAK,GAAG,CAAC,GAAG,OAAO;AAC9B;AAEA,SAAS,SAAS,CAAC,EAAE,CAAC;IAClB,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAChB,EAAE,IAAI,IAAI,EAAE,IAAI,IAChB,EAAE,IAAI,IAAI,EAAE,IAAI,IAChB,EAAE,IAAI,IAAI,EAAE,IAAI;AAC3B;AAEA,SAAS,WAAW,CAAC,EAAE,CAAC;IACpB,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAChB,EAAE,IAAI,IAAI,EAAE,IAAI,IAChB,EAAE,IAAI,IAAI,EAAE,IAAI,IAChB,EAAE,IAAI,IAAI,EAAE,IAAI;AAC3B;AAEA,SAAS,WAAW,QAAQ;IACxB,OAAO;QACH;QACA,QAAQ;QACR,MAAM;QACN,MAAM;QACN,MAAM;QACN,MAAM,CAAC;QACP,MAAM,CAAC;IACX;AACJ;AAEA,yGAAyG;AACzG,qEAAqE;AAErE,SAAS,YAAY,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO;IAC7C,MAAM,QAAQ;QAAC;QAAM;KAAM;IAE3B,MAAO,MAAM,MAAM,CAAE;QACjB,QAAQ,MAAM,GAAG;QACjB,OAAO,MAAM,GAAG;QAEhB,IAAI,QAAQ,QAAQ,GAAG;QAEvB,MAAM,MAAM,OAAO,KAAK,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,KAAK;QACvD,CAAA,GAAA,uIAAA,CAAA,UAAW,AAAD,EAAE,KAAK,KAAK,MAAM,OAAO;QAEnC,MAAM,IAAI,CAAC,MAAM,KAAK,KAAK;IAC/B;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-parse/node_modules/color-name/index.js"],"sourcesContent":["export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-parse/index.js"],"sourcesContent":["/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1402, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-space/rgb.js"],"sourcesContent":["/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\nconst rgb = {\n\tname: 'rgb',\n\tmin: [0, 0, 0],\n\tmax: [255, 255, 255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n\nexport default rgb;\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACD,MAAM,MAAM;IACX,MAAM;IACN,KAAK;QAAC;QAAG;QAAG;KAAE;IACd,KAAK;QAAC;QAAK;QAAK;KAAI;IACpB,SAAS;QAAC;QAAO;QAAS;KAAO;IACjC,OAAO;QAAC;KAAM;AACf;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-space/hsl.js"],"sourcesContent":["/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nvar hsl = {\n\tname: 'hsl',\n\tmin: [0, 0, 0],\n\tmax: [360, 100, 100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function (hsl) {\n\t\tvar h = hsl[0] / 360, s = hsl[1] / 100, l = hsl[2] / 100, t1, t2, t3, rgb, val, i = 0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (; i < 3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t\t\t3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\t\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\nexport default (hsl);\n\n\n//extend rgb\nrgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255,\n\t\tmin = Math.min(r, g, b),\n\t\tmax = Math.max(r, g, b),\n\t\tdelta = max - min,\n\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\t//FIXME h is possibly undefined\n\t//@ts-ignore\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACD;;AAEA,IAAI,MAAM;IACT,MAAM;IACN,KAAK;QAAC;QAAG;QAAG;KAAE;IACd,KAAK;QAAC;QAAK;QAAK;KAAI;IACpB,SAAS;QAAC;QAAO;QAAc;KAAY;IAC3C,OAAO;QAAC;KAAM;IAEd,KAAK,SAAU,GAAG;QACjB,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,KAAK,IAAI,GAAG,CAAC,EAAE,GAAG,KAAK,IAAI,GAAG,CAAC,EAAE,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI;QAEpF,IAAI,MAAM,GAAG,OAAO,MAAM,IAAI,KAAK;YAAC;YAAK;YAAK;SAAI;QAElD,KAAK,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI;QACzC,KAAK,IAAI,IAAI;QAEb,MAAM;YAAC;YAAG;YAAG;SAAE;QACf,MAAO,IAAI,GAAI;YACd,KAAK,IAAI,IAAI,IAAI,CAAE,CAAC,IAAI,CAAC;YACzB,KAAK,IAAI,OAAO,KAAK,KAAK;YAC1B,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,IAAI,KACvC,IAAI,KAAK,IAAI,KACZ,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAC5C;YACH,GAAG,CAAC,IAAI,GAAG,MAAM;QAClB;QAEA,OAAO;IACR;AACD;uCAEgB;AAGhB,YAAY;AACZ,wIAAA,CAAA,UAAG,CAAC,GAAG,GAAG,SAAU,GAAG;IACtB,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,KAChB,IAAI,GAAG,CAAC,EAAE,GAAG,KACb,IAAI,GAAG,CAAC,EAAE,GAAG,KACb,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,IACrB,MAAM,KAAK,GAAG,CAAC,GAAG,GAAG,IACrB,QAAQ,MAAM,KACd,GAAG,GAAG;IAEP,IAAI,QAAQ,KAAK;QAChB,IAAI;IACL,OACK,IAAI,MAAM,KAAK;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI;IACf,OACK,IAAI,MAAM,KAAK;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI;IACnB,OACK,IAAI,MAAM,KAAK;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI;IACnB;IAEA,+BAA+B;IAC/B,YAAY;IACZ,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI;IAErB,IAAI,IAAI,GAAG;QACV,KAAK;IACN;IAEA,IAAI,CAAC,MAAM,GAAG,IAAI;IAElB,IAAI,QAAQ,KAAK;QAChB,IAAI;IACL,OACK,IAAI,KAAK,KAAK;QAClB,IAAI,QAAQ,CAAC,MAAM,GAAG;IACvB,OACK;QACJ,IAAI,QAAQ,CAAC,IAAI,MAAM,GAAG;IAC3B;IAEA,OAAO;QAAC;QAAG,IAAI;QAAK,IAAI;KAAI;AAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1526, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-space/xyz.js"],"sourcesContent":["/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nconst xyz = {\n\tname: 'xyz',\n\tmin: [0, 0, 0],\n\tchannel: ['X', 'Y', 'Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931'],\n\n\t// Whitepoint reference values with observer/illuminant\n\t// http://en.wikipedia.org/wiki/Standard_illuminant\n\twhitepoint: {\n\t\t//1931 2°\n\t\t2: {\n\t\t\t//incadescent\n\t\t\tA: [109.85, 100, 35.585],\n\t\t\t// B:[],\n\t\t\tC: [98.074, 100, 118.232],\n\t\t\tD50: [96.422, 100, 82.521],\n\t\t\tD55: [95.682, 100, 92.149],\n\t\t\t//daylight\n\t\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\t\tD75: [94.972, 100, 122.638],\n\t\t\t//flourescent\n\t\t\t// F1: [],\n\t\t\tF2: [99.187, 100, 67.395],\n\t\t\t// F3: [],\n\t\t\t// F4: [],\n\t\t\t// F5: [],\n\t\t\t// F6:[],\n\t\t\tF7: [95.044, 100, 108.755],\n\t\t\t// F8: [],\n\t\t\t// F9: [],\n\t\t\t// F10: [],\n\t\t\tF11: [100.966, 100, 64.370],\n\t\t\t// F12: [],\n\t\t\tE: [100, 100, 100]\n\t\t},\n\n\t\t//1964  10°\n\t\t10: {\n\t\t\t//incadescent\n\t\t\tA: [111.144, 100, 35.200],\n\t\t\tC: [97.285, 100, 116.145],\n\t\t\tD50: [96.720, 100, 81.427],\n\t\t\tD55: [95.799, 100, 90.926],\n\t\t\t//daylight\n\t\t\tD65: [94.811, 100, 107.304],\n\t\t\tD75: [94.416, 100, 120.641],\n\t\t\t//flourescent\n\t\t\tF2: [103.280, 100, 69.026],\n\t\t\tF7: [95.792, 100, 107.687],\n\t\t\tF11: [103.866, 100, 65.627],\n\t\t\tE: [100, 100, 100]\n\t\t}\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array<number>} _xyz Array of xyz values\n * @param {Array<number>} white Whitepoint reference\n * @return {Array<number>} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t// FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array<number>} rgb RGB channels\n *\n * @return {Array<number>} XYZ channels\n */\nrgb.xyz = function (rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1738, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-space/luv.js"],"sourcesContent":["/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\nimport xyz from './xyz.js';\n\nvar luv = {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0, -134, -140],\n\tmax: [100, 224, 122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function (arg, i, o) {\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0, 0, 0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow((l + 16) / 116, 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\nexport default (luv);\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function (arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y / yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1 / 3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1848, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-space/lchuv.js"],"sourcesContent":["/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n// cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0, 0, 0],\n\tmax: [100, 100, 360],\n\n\tluv: function (luv) {\n\t\tvar l = luv[0],\n\t\t\tc = luv[1],\n\t\t\th = luv[2],\n\t\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function (arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default (lchuv);\n\nluv.lchuv = function (luv) {\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u * u + v * v);\n\tvar hr = Math.atan2(v, u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l, c, h]\n};\n\nxyz.lchuv = function (arg) {\n\treturn luv.lchuv(xyz.luv(arg));\n};\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACD;AACA;;;AAEA,kBAAkB;AAClB,IAAI,QAAQ;IACX,MAAM;IACN,SAAS;QAAC;QAAa;QAAU;KAAM;IACvC,OAAO;QAAC;QAAS;KAAW;IAC5B,KAAK;QAAC;QAAG;QAAG;KAAE;IACd,KAAK;QAAC;QAAK;QAAK;KAAI;IAEpB,KAAK,SAAU,GAAG;QACjB,IAAI,IAAI,GAAG,CAAC,EAAE,EACb,IAAI,GAAG,CAAC,EAAE,EACV,IAAI,GAAG,CAAC,EAAE,EACV,GAAG,GAAG;QAEP,KAAK,IAAI,MAAM,IAAI,KAAK,EAAE;QAC1B,IAAI,IAAI,KAAK,GAAG,CAAC;QACjB,IAAI,IAAI,KAAK,GAAG,CAAC;QACjB,OAAO;YAAC;YAAG;YAAG;SAAE;IACjB;IAEA,KAAK,SAAU,GAAG;QACjB,OAAO,wIAAA,CAAA,UAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC;IAC1B;AACD;uCAEgB;AAEhB,wIAAA,CAAA,UAAG,CAAC,KAAK,GAAG,SAAU,GAAG;IACxB,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,IAAI,GAAG,CAAC,EAAE;IAEtC,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI;IAC9B,IAAI,KAAK,KAAK,KAAK,CAAC,GAAG;IACvB,IAAI,IAAI,KAAK,MAAM,IAAI,KAAK,EAAE;IAC9B,IAAI,IAAI,GAAG;QACV,KAAK;IACN;IAEA,OAAO;QAAC;QAAG;QAAG;KAAE;AACjB;AAEA,wIAAA,CAAA,UAAG,CAAC,KAAK,GAAG,SAAU,GAAG;IACxB,OAAO,wIAAA,CAAA,UAAG,CAAC,KAAK,CAAC,wIAAA,CAAA,UAAG,CAAC,GAAG,CAAC;AAC1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1920, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/Documents/GitHub/XFUTURER/node_modules/color-rgba/index.js"],"sourcesContent":["/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;AACxB;AACA;AACA;;;;AAEe,SAAS,KAAK,KAAK;IACjC,oBAAoB;IACpB,IAAI,MAAM,OAAO,CAAC,UAAU,MAAM,GAAG,EAAE,QAAQ,OAAO,GAAG,IAAI;IAC7D,IAAI,iBAAiB,QAAQ,QAAQ,CAAC;IAEtC,IAAI,QAAQ,GAAG;IAEf,sCAAsC;IACtC,IAAI,SAAS,CAAA,GAAA,0IAAA,CAAA,UAAK,AAAD,EAAE;IAEnB,IAAI,CAAC,OAAO,KAAK,EAAE,OAAO,EAAE;IAE5B,MAAM,MAAM,OAAO,KAAK,CAAC,EAAE,KAAK,MAAM,wIAAA,CAAA,UAAG,CAAC,GAAG,GAAG,wIAAA,CAAA,UAAG,CAAC,GAAG;IACvD,MAAM,MAAM,OAAO,KAAK,CAAC,EAAE,KAAK,MAAM,wIAAA,CAAA,UAAG,CAAC,GAAG,GAAG,wIAAA,CAAA,UAAG,CAAC,GAAG;IAEvD,SAAS,MAAM;IACf,MAAM,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;IAC/D,MAAM,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;IAC/D,MAAM,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;IAE/D,IAAI,OAAO,KAAK,CAAC,EAAE,KAAK,KAAK;QAC5B,SAAS,wIAAA,CAAA,UAAG,CAAC,GAAG,CAAC;IAClB;IAEA,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,KAAK,EAAE,IAAI;IAEhD,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1949, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}