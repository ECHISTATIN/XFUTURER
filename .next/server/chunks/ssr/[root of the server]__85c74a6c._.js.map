{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/xfuture_r/src/components/pc/NewsList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/pc/NewsList.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pc/NewsList.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/xfuture_r/src/components/pc/NewsList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/pc/NewsList.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pc/NewsList.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/jiang/xfuture_r/src/app/%5Blang%5D/pc/route/news/page.tsx"],"sourcesContent":["import { getTranslations } from '@/lib/i18n'\nimport NewsList from '@/components/pc/NewsList' // 将客户端逻辑移到新组件\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport '@/styles/pc/route.css'\nimport '@/styles/pc/news.css'\n\n// 定义新闻项的类型\ninterface NewsItem {\n  time: string\n  summary: string\n  details: string\n}\n\n// 获取新闻数据的函数\nasync function fetchNewsData(lang: string) {\n  try {\n    const response = await axios.get(\"http://localhost:3000/api/news\")\n    const data = response.data.data\n\n    const formattedData1: NewsItem[] = data\n      .filter((item: any) => item.category === 'a')\n      .map((item: any) => ({\n        time: dayjs(item.publishDate).format('YYYY/MM/DD'),\n        summary: lang === 'en' ? item.title_en : lang === 'zh' ? item.title_cn : item.title,\n        details: lang === 'en' ? item.content_en : lang === 'zh' ? item.content_cn : item.content,\n      }))\n    const formattedData2: NewsItem[] = data\n      .filter((item: any) => item.category === 'b')\n      .map((item: any) => ({\n        time: dayjs(item.publishDate).format('YYYY/MM/DD'),\n        summary: lang === 'en' ? item.title_en : lang === 'zh' ? item.title_cn : item.title,\n        details: lang === 'en' ? item.content_en : lang === 'zh' ? item.content_cn : item.content,\n      }))\n\n    return { newsData1: formattedData1, newsData2: formattedData2 }\n  } catch (error) {\n    console.error('Failed to fetch news data:', error)\n    return { newsData1: [], newsData2: [] }\n  }\n}\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ lang: string }>\n}) {\n  const { lang } = await params\n  const t = await getTranslations(lang)\n\n  return {\n    title: t.newspage || 'News / Blog List',\n    description: t.newspage || 'Latest news and blog posts',\n    alternates: {\n      canonical: `/${lang}/route/news`,\n      languages: {\n        'en': '/en/route/news',\n        'zh': '/zh/route/news',\n        'ja': '/ja/route/news',\n      },\n    },\n  }\n}\n\nexport default async function NewsPage({\n  params,\n}: {\n  params: Promise<{ lang: string }>\n}) {\n  const { lang } = await params\n  const t = await getTranslations(lang)\n  const { newsData1, newsData2 } = await fetchNewsData(lang)\n\n  // 调试翻译和新闻数据\n  console.log('Lang:', lang)\n  console.log('Translations:', t)\n  console.log('newsData1:', newsData1)\n  console.log('newsData2:', newsData2)\n\n  return (\n    <div>\n      <div className=\"route-select\">\n        <div className=\"route-f1\">{t.news.title}</div>\n        <div className=\"route-line\">\n          <span className=\"route-f2\">{t.news.home}</span>\n          <img src=\"/images/Polygon2.png\" alt=\"Contact\" />\n          <span className=\"route-f3\">{t.news.title2}</span>\n        </div>\n      </div>\n\n      <NewsList\n        lang={lang}\n        newsData1={newsData1}\n        newsData2={newsData2}\n        translations={{\n          option1: t.news.option1,\n          option2: t.news.option2,\n          noContent: t.news.noContent,\n        }}\n      />\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}